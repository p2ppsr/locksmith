
contract Locksmith {
  const Ripemd160 address;
  const int lockUntilHeight;
  const bytes message;
  int __scrypt_ts_ctx_locktime;
  int __scrypt_ts_ctx_sequence;
  constructor(Ripemd160 address, int lockUntilHeight, bytes message) {
    require(lockUntilHeight < 500000000);
    this.address = address;
    this.lockUntilHeight = lockUntilHeight;
    this.message = message;
  }
  public function unlock(Sig sig, PubKey pubKey, SigHashPreimage __scrypt_ts_txPreimage) {
    require(Tx.checkPreimageSigHashType(__scrypt_ts_txPreimage, SigHashType(b'c2')));
    this.__scrypt_ts_ctx_locktime = SigHash.nLocktime(__scrypt_ts_txPreimage);
    this.__scrypt_ts_ctx_sequence = SigHash.nSequence(__scrypt_ts_txPreimage);
    require(this.__scrypt_ts_ctx_locktime < 500000000);
    require(this.__scrypt_ts_ctx_sequence == (0xfffffffe));
    require(this.__scrypt_ts_ctx_locktime >= this.lockUntilHeight);
    require(hash160(pubKey) == this.address);
    require(checkSig(sig, pubKey));
  }
}